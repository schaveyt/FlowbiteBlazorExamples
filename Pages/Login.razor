@page "/login"
@using System.ComponentModel.DataAnnotations

<PageTitle>Login</PageTitle>

<div class="min-h-[calc(100vh-8rem)] flex items-center justify-center p-4">
    <Card class="w-full max-w-md">
        <div class="text-center mb-6">
            <h1 class="text-2xl font-semibold text-gray-900 dark:text-white">Sign in to your account</h1>
            <p class="mt-1 text-sm text-gray-500">Welcome back! Please enter your details.</p>
        </div>

        <EditForm Model="model" OnValidSubmit="HandleLocalLogin">
            <DataAnnotationsValidator />
            <ValidationSummary />

            <div class="flex flex-col gap-4">
                <div>
                    <div class="mb-2 block">
                        <Label For="email" Value="Email" />
                    </div>
                    <TextInput Id="email" Type="email" @bind-Value="model.Email" Placeholder="you@example.com" Required="true" />
                </div>

                <div>
                    <div class="mb-2 block">
                        <Label For="password" Value="Password" />
                    </div>
                    <TextInput Id="password" Type="password" @bind-Value="model.Password" Placeholder="••••••••" Required="true" />
                </div>

                <div class="flex items-center justify-between">
                    <div class="flex items-center gap-2">
                        <Checkbox Id="rememberMe" @bind-Checked="model.RememberMe" />
                        <Label For="rememberMe" Value="Remember me" />
                    </div>
                    <a href="#" class="text-sm text-primary-600 hover:underline dark:text-primary-400">Forgot password?</a>
                </div>

                <div class="flex flex-col gap-2 mt-2">
                    <Button Type="submit" Color="ButtonColor.Primary" class="w-full">Sign in</Button>
                    <div class="relative text-center">
                        <span class="px-2 text-xs text-gray-500 bg-white dark:bg-gray-800 relative z-10">or</span>
                        <div class="absolute inset-0 flex items-center" aria-hidden="true">
                            <div class="w-full border-t border-gray-200 dark:border-gray-700"></div>
                        </div>
                    </div>
                    <Button Color="ButtonColor.Light" class="w-full" OnClick="LoginWithGoogle">
                        <span class="inline-flex items-center gap-2">
                            <GoogleIcon class="w-5 h-5" />
                            <span>Continue with Google</span>
                        </span>
                    </Button>
                </div>
            </div>
        </EditForm>
    </Card>
</div>

@code {
    private LoginModel model = new();

    private Task HandleLocalLogin()
    {
        // Demo only: wire to auth service in real app
        Console.WriteLine($"Login with {model.Email}, remember={model.RememberMe}");
        return Task.CompletedTask;
    }

    private Task LoginWithGoogle()
    {
        // Demo only: redirect to Google OAuth in real app
        Console.WriteLine("Google login clicked");
        return Task.CompletedTask;
    }

    private sealed class LoginModel
    {
        [Required, EmailAddress]
        public string Email { get; set; } = string.Empty;

        [Required]
        public string Password { get; set; } = string.Empty;

        public bool RememberMe { get; set; }
    }
}

