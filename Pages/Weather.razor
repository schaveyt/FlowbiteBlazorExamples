@page "/weather"
@inject HttpClient Http

<PageTitle>Weather</PageTitle>

<h1 class="font-semibold text-2xl">Weather</h1>

<p class="mt-2">This component demonstrates fetching data from the server.</p>

@if (forecasts == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <Table class="mt-6">
        <TableHead>
            <TableRow>
                <TableHeadCell>Date</TableHeadCell>
                <TableHeadCell>Temp. (C)</TableHeadCell>
                <TableHeadCell>Temp. (F)</TableHeadCell>
                <TableHeadCell>Summary</TableHeadCell>
            </TableRow>
        </TableHead>
        <TableBody class="divide-y">
            @foreach (var forecast in forecasts)
            {
                <TableRow class="bg-white dark:border-gray-700 dark:bg-gray-800">
                    <TableCell class="whitespace-nowrap font-medium text-gray-900 dark:text-white">@forecast.Date.ToShortDateString()</TableCell>
                    <TableCell>@forecast.TemperatureC</TableCell>
                    <TableCell>@forecast.TemperatureF</TableCell>
                    <TableCell>@forecast.Summary</TableCell>
                </TableRow>
            }
        </TableBody>
    </Table>
}

@code {
    private WeatherForecast[]? forecasts;

    protected override async Task OnInitializedAsync()
    {
        forecasts = await Http.GetFromJsonAsync<WeatherForecast[]>("sample-data/weather.json");
    }

    public class WeatherForecast
    {
        public DateOnly Date { get; set; }

        public int TemperatureC { get; set; }

        public string? Summary { get; set; }

        public int TemperatureF => 32 + (int)(TemperatureC / 0.5556);
    }
}
